{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lew\\\\saliystrelkovrittersport\\\\ClientApp\\\\src\\\\components\\\\FetchData.js\";\nimport React, { Component } from 'react';\nexport class FetchData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      forecasts: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.StoresData();\n  }\n\n  static renderStores(forecasts) {\n    return React.createElement(\"section\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, forecasts.map(forecast => React.createElement(\"div\", {\n      class: \"col-12\",\n      key: forecast.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"image left special\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      class: \"\",\n      src: forecast.logo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, forecast.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Adipiscing dis a mus a convallis lum commodo habitasse suspendisse magnis.\"))));\n  }\n\n  render() {\n    let contents = this.state.loading ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Loading...\")) : FetchData.renderForecastsTable(this.state.forecasts);\n    return React.createElement(\"section\", {\n      id: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      id: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Snapshot \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"by TEMPLATED\"))), React.createElement(\"section\", {\n      id: \"contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"social column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Stores\"), contents), React.createElement(\"div\", {\n      class: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"ProductVariety\"), contents)));\n  }\n\n  async StoresData() {\n    const response = await fetch('api/store');\n    const data = await response.json();\n    this.setState({\n      forecasts: data,\n      loading: false\n    });\n  }\n\n}\nFetchData.displayName = FetchData.name;","map":{"version":3,"sources":["C:\\Users\\Lew\\saliystrelkovrittersport\\ClientApp\\src\\components\\FetchData.js"],"names":["React","Component","FetchData","constructor","props","state","forecasts","loading","componentDidMount","StoresData","renderStores","map","forecast","name","logo","render","contents","renderForecastsTable","response","fetch","data","json","setState","displayName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAGrCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,OAAO,EAAE;AAA1B,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,UAAL;AACH;;AAED,SAAOC,YAAP,CAAoBJ,SAApB,EAA+B;AAC3B,WACI;AAAS,MAAA,SAAS,EAAC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKA,SAAS,CAACK,GAAV,CAAcC,QAAQ,IACnB;AAAK,MAAA,KAAK,EAAC,QAAX;AAAoB,MAAA,GAAG,EAAEA,QAAQ,CAACC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,KAAK,EAAC,oBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC;AAAK,MAAA,KAAK,EAAC,EAAX;AAAc,MAAA,GAAG,EAAED,QAAQ,CAACE,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,QAAQ,CAACC,IAAd,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oFAHJ,CADH,CAFL,CADJ;AAeH;;AAELE,EAAAA,MAAM,GAAG;AACL,QAAIC,QAAQ,GAAG,KAAKX,KAAL,CAAWE,OAAX,GACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAH,CADS,GAETL,SAAS,CAACe,oBAAV,CAA+B,KAAKZ,KAAL,CAAWC,SAA1C,CAFN;AAGA,WACI;AAAS,MAAA,EAAE,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,EAAE,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAd,CADJ,CADJ,EAII;AAAS,MAAA,EAAE,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,EAEKU,QAFL,CADJ,EAKI;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEKA,QAFL,CALJ,CAJJ,CADJ;AAkBH;;AAED,QAAMP,UAAN,GAAmB;AACf,UAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAAEhB,MAAAA,SAAS,EAAEc,IAAb;AAAmBb,MAAAA,OAAO,EAAE;AAA5B,KAAd;AACH;;AA1DwC;AAA5BL,S,CACFqB,W,GAAcrB,SAAS,CAACW,I","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n    static displayName = FetchData.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { forecasts: [], loading: true };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.StoresData();\r\n    }\r\n\r\n    static renderStores(forecasts) {\r\n        return (\r\n            <section className=\"row\">\r\n\r\n                {forecasts.map(forecast =>\r\n                    <div class=\"col-12\" key={forecast.name}>\r\n                        <span class=\"image left special\"><img class=\"\" src={forecast.logo}></img></span>\r\n                        <h3>{forecast.name}</h3>\r\n                        <p>\r\n                            Adipiscing dis a mus a convallis lum commodo habitasse suspendisse magnis.\r\n\t\t\t\t\t\t</p>\r\n                    </div>                              \r\n                       )\r\n    }     \r\n            </section>\r\n        );\r\n    }\r\n\r\nrender() {\r\n    let contents = this.state.loading\r\n        ? <p><em>Loading...</em></p>\r\n        : FetchData.renderForecastsTable(this.state.forecasts);\r\n    return (\r\n        <section id=\"main\">\r\n            <header id=\"header\">\r\n                <div>Snapshot <span>by TEMPLATED</span></div>\r\n            </header>\r\n            <section id=\"contact\">\r\n                <div class=\"social column\">\r\n                   <h3>Stores</h3>\r\n                    {contents}\r\n                </div>\r\n                <div class=\"column\">\r\n                    <h3>ProductVariety</h3>\r\n                    {contents}\r\n                </div>\r\n\r\n            </section>\r\n        </section>\r\n    );\r\n}\r\n\r\nasync StoresData() {\r\n    const response = await fetch('api/store');\r\n    const data = await response.json();\r\n    this.setState({ forecasts: data, loading: false });\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}