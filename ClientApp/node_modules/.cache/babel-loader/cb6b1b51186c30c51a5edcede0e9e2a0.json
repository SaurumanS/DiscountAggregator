{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lew\\\\saliystrelkovrittersport\\\\ClientApp\\\\src\\\\components\\\\FetchData.js\";\nimport React, { Component } from 'react';\nexport class FetchData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      forecasts: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.populateWeatherData();\n  }\n\n  static renderForecastsTable(forecasts) {\n    return React.createElement(\"section\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, forecasts.map(forecast => React.createElement(\"div\", {\n      class: \"col-12\",\n      key: forecast.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"image left special\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      class: \"\",\n      src: forecast.logo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, forecast.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Adipiscing dis a mus a convallis condimentum molestie penatibus iaculis  malesuada tempus vestibulum commodo habitasse suspendisse magnis.\"))));\n  }\n\n  render() {\n    let contents = this.state.loading ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Loading...\")) : FetchData.renderForecastsTable(this.state.forecasts);\n    return React.createElement(\"section\", {\n      id: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      id: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Snapshot \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"by TEMPLATED\"))), React.createElement(\"section\", {\n      id: \"contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"social column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, contents), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bg-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Get in Touch\"), React.createElement(\"form\", {\n      action: \"#\",\n      method: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"field half first\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Name\")), React.createElement(\"div\", {\n      class: \"field half\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Email\")), React.createElement(\"div\", {\n      class: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Message\"), React.createElement(\"textarea\", {\n      name: \"message\",\n      id: \"message\",\n      rows: \"6\",\n      placeholder: \"Message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      class: \"actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))))));\n  }\n\n  async populateWeatherData() {\n    const response = await fetch('api/store');\n    const data = await response.json();\n    this.setState({\n      forecasts: data,\n      loading: false\n    });\n  }\n\n}\nFetchData.displayName = FetchData.name;","map":{"version":3,"sources":["C:\\Users\\Lew\\saliystrelkovrittersport\\ClientApp\\src\\components\\FetchData.js"],"names":["React","Component","FetchData","constructor","props","state","forecasts","loading","componentDidMount","populateWeatherData","renderForecastsTable","map","forecast","name","logo","render","contents","response","fetch","data","json","setState","displayName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n    static displayName = FetchData.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { forecasts: [], loading: true };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.populateWeatherData();\r\n    }\r\n\r\n    static renderForecastsTable(forecasts) {\r\n        return (\r\n            <section className=\"row\">\r\n                {forecasts.map(forecast =>\r\n                    <div class=\"col-12\" key={forecast.name}>\r\n                        <span class=\"image left special\"><img class=\"\" src={forecast.logo}></img></span>\r\n                        <h3>{forecast.name}</h3>\r\n                        <p>\r\n                            Adipiscing dis a mus a convallis condimentum molestie penatibus iaculis  malesuada tempus vestibulum commodo habitasse suspendisse magnis.\r\n\t\t\t\t\t\t</p>\r\n                    </div>                              \r\n                       )\r\n    }     \r\n            </section>\r\n        );\r\n    }\r\n\r\nrender() {\r\n    let contents = this.state.loading\r\n        ? <p><em>Loading...</em></p>\r\n        : FetchData.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n        <section id=\"main\">\r\n            <header id=\"header\">\r\n                <div>Snapshot <span>by TEMPLATED</span></div>\r\n            </header>\r\n            <section id=\"contact\">\r\n                <div class=\"social column\">\r\n                   \r\n                    {contents}\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"bg-dark\"></div>\r\n                </div>\r\n\r\n                <div class=\"column\">\r\n                    <h3>Get in Touch</h3>\r\n                    <form action=\"#\" method=\"post\">\r\n                        <div class=\"field half first\">\r\n                            <label for=\"name\">Name</label>\r\n\r\n                        </div>\r\n                        <div class=\"field half\">\r\n                            <label for=\"email\">Email</label>\r\n\r\n                        </div>\r\n                        <div class=\"field\">\r\n                            <label for=\"message\">Message</label>\r\n                            <textarea name=\"message\" id=\"message\" rows=\"6\" placeholder=\"Message\"></textarea>\r\n                        </div>\r\n                        <ul class=\"actions\">\r\n                            <li></li>\r\n                        </ul>\r\n                    </form>\r\n                </div>\r\n\r\n            </section>\r\n        </section>\r\n    );\r\n}\r\n\r\nasync populateWeatherData() {\r\n    const response = await fetch('api/store');\r\n    const data = await response.json();\r\n    this.setState({ forecasts: data, loading: false });\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}