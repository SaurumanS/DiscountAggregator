{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lew\\\\saliystrelkovrittersport\\\\ClientApp\\\\src\\\\components\\\\Input.js\";\nimport React, { Component } from 'react';\nlet itemsVariety3 = ['orange', 'red', 'blue', 'purple'];\nlet Variety = ['orange', 'red', 'blue', 'purple'];\nexport class Input extends Component {\n  render() {\n    return React.createElement(\"section\", {\n      id: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      id: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Snapshot \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"by TEMPLATED\"))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      id: \"contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"\\u041F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\\u044B\"), React.createElement(Product, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"social column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"\\u041C\\u0430\\u0433\\u0430\\u0437\\u0438\\u043D\"), React.createElement(Shop, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }))), React.createElement(\"section\", {\n      id: \"contact\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \" column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"\\u0412\\u0438\\u0434 \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\\u0430\"), React.createElement(ProductVariety, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"social column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"\\u0422\\u0438\\u043F \\u043F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\\u0430\"), React.createElement(ProductType, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nclass NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      name: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value.toUpperCase()\n    });\n    this.setState({\n      name: event.target.name\n    });\n  }\n\n  handleSubmit(event) {\n    alert('Отправленное имя: ' + this.state.name + \"    \" + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Value:\", React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"\\u0418\\u043C\\u044F:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: this.state.name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Product extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formValues: {},\n      itemsVariety: [],\n      itemsType: [],\n      itemsStore: [],\n      selectedVariety: null,\n      selectedStore: null,\n      selectedType: null,\n      newPrice: null,\n      oldPrice: null,\n      kostyl: true\n    };\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    let formValues = this.state.formValues;\n    let name = event.target.name;\n    let value = event.target.value;\n    formValues[name] = value;\n    this.setState({\n      formValues\n    });\n  }\n\n  handleChangeSelectedVariety(event) {\n    event.preventDefault();\n    this.setState({\n      selectedVariety: event.target.value,\n      itemsType: []\n    });\n    const SelectedVariety = this.state.selectedVariety;\n    const Kostyl = this.state.kostyl;\n\n    if (SelectedVariety != null || Kostyl) {\n      let url = \"api/ProductType/GetFromName/\" + event.target.value;\n      fetch(url).then(response => {\n        return response.json();\n      }).then(data => {\n        let itemsFromApi = data.map(item => {\n          return {\n            value: item.id,\n            display: item.name\n          };\n        });\n        this.setState({\n          itemsType: [{\n            value: null,\n            display: '(Select type)'\n          }].concat(itemsFromApi)\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n      this.setState({\n        kostyl: false\n      });\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const Name = this.state.formValues['name'];\n    const selectedVariety = this.state.selectedVariety;\n    const selectedType = this.state.selectedType;\n    const NewPrice = parseFloat(this.state.newPrice);\n    const OldPrice = parseFloat(this.state.oldPrice);\n    const pic_url = this.state.formValues['pic_url'];\n    const selectedStore = this.state.selectedStore;\n\n    if (Name != null && selectedVariety != null && selectedType != null && pic_url != null && selectedStore != null) {\n      fetch('api/Product/', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: Name,\n          productvariety: selectedVariety,\n          producttype: selectedType,\n          oldprice: OldPrice,\n          newprice: NewPrice,\n          photo: pic_url,\n          store: selectedStore\n        })\n      });\n      alert(\"Request delivered\");\n    } else {\n      alert('try again');\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"api/ProductVariety/\").then(response => {\n      return response.json();\n    }).then(data => {\n      let itemsFromApi = data.map(item => {\n        return {\n          value: item.id,\n          display: item.name\n        };\n      });\n      this.setState({\n        itemsVariety: [{\n          value: null,\n          display: '(Select variety)'\n        }].concat(itemsFromApi)\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n    fetch(\"api/Store/\").then(response => {\n      return response.json();\n    }).then(data => {\n      let itemsFromApi = data.map(item => {\n        return {\n          value: item.id,\n          display: item.name\n        };\n      });\n      this.setState({\n        itemsStore: [{\n          value: null,\n          display: '(Select store)'\n        }].concat(itemsFromApi)\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \" Name:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Name\",\n      value: this.state.formValues[\"name\"],\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"ProductVariety:\", React.createElement(\"select\", {\n      value: this.state.selectedVariety,\n      onChange: this.handleChangeSelectedVariety.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, this.state.itemsVariety.map(item => React.createElement(\"option\", {\n      key: item.value,\n      value: item.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, item.display)))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"ProductType:\", React.createElement(\"select\", {\n      value: this.state.selectedType,\n      onChange: event => this.setState({\n        selectedType: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, this.state.itemsType.map(item => React.createElement(\"option\", {\n      key: item.value,\n      value: item.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, item.display))))), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \" NewPrice:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"NewPrice\",\n      placeholder: \"NewPrice\",\n      value: this.state.newPrice,\n      onChange: event => this.setState({\n        test1: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \" OldPrice:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"OldPrice\",\n      placeholder: \"OldPrice\",\n      value: this.state.oldPrice,\n      onChange: event => this.setState({\n        test2: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \" pic_url:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"pic_url\",\n      placeholder: \"pic_url\",\n      value: this.state.formValues[\"pic_url\"],\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"Store:\", React.createElement(\"select\", {\n      value: this.state.selectedStore,\n      onChange: event => this.setState({\n        selectedStore: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, this.state.itemsStore.map(item => React.createElement(\"option\", {\n      key: item.value,\n      value: item.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, item.display)))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      classNameName: \"btn btn-primary\",\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Shop extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formValues: {}\n    };\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    let formValues = this.state.formValues;\n    let name = event.target.name;\n    let value = event.target.value;\n    formValues[name] = value;\n    this.setState({\n      formValues\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const Name = this.state.formValues['name'];\n    const Logo = this.state.formValues['logo_url'];\n\n    if (Name != null) {\n      if (Logo != null) {\n        fetch('api/Store/', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: this.state.formValues['name'],\n            logo: this.state.formValues[\"logo_url\"]\n          })\n        });\n        alert('Request delivered');\n      } else {\n        alert('enter logo_url');\n      }\n    } else {\n      alert('try again');\n    }\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \" Name:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Name\",\n      value: this.state.formValues[\"name\"],\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \" logo_url:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"logo_url\",\n      placeholder: \"logo_url\",\n      value: this.state.formValues[\"logo_url\"],\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      classNameName: \"btn btn-primary\",\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass ProductVariety extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formValues: {}\n    };\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    let formValues = this.state.formValues;\n    let name = event.target.name;\n    let value = event.target.value;\n    formValues[name] = value;\n    this.setState({\n      formValues\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const Name = this.state.formValues['name'];\n\n    if (Name != null) {\n      fetch('api/ProductVariety/', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: Name\n        })\n      });\n      alert('Request delivered');\n    } else {\n      alert('try again');\n    }\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \" Name:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Name\",\n      value: this.state.formValues[\"name\"],\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      classNameName: \"btn btn-primary\",\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass ProductType extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formValues: {},\n      value: 'orange',\n      tech: 'select',\n      Variety: [],\n      items: [],\n      selected: \"\"\n    };\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    let formValues = this.state.formValues;\n    let name = event.target.name;\n    let value = event.target.value;\n    formValues[name] = value;\n    this.setState({\n      formValues\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const Name = this.state.formValues['name'];\n    const ProductVariety = this.state.selected;\n\n    if (Name != null) {\n      if (ProductVariety != null) {\n        fetch('api/ProductType/', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            name: Name,\n            varietyid: ProductVariety\n          })\n        });\n        alert('good shit, bro');\n      } else {\n        alert('enter logo_url');\n      }\n    } else {\n      alert('try again');\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"api/ProductVariety/\").then(response => {\n      return response.json();\n    }).then(data => {\n      let itemsFromApi = data.map(item => {\n        return {\n          value: item.id,\n          display: item.name\n        };\n      });\n      this.setState({\n        items: [{\n          value: '',\n          display: '(Select variety)'\n        }].concat(itemsFromApi)\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, \" Name:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Name\",\n      value: this.state.formValues[\"name\"],\n      onChange: this.handleChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, \"ProductVariety:\"), React.createElement(\"select\", {\n      value: this.state.selected,\n      onChange: event => this.setState({\n        selected: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }, this.state.items.map(item => React.createElement(\"option\", {\n      key: item.value,\n      value: item.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, item.display))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      classNameName: \"btn btn-primary\",\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\Lew\\saliystrelkovrittersport\\ClientApp\\src\\components\\Input.js"],"names":["React","Component","itemsVariety3","Variety","Input","render","NameForm","constructor","props","state","value","name","handleChange","bind","handleSubmit","event","setState","target","toUpperCase","alert","preventDefault","Product","formValues","itemsVariety","itemsType","itemsStore","selectedVariety","selectedStore","selectedType","newPrice","oldPrice","kostyl","handleChangeSelectedVariety","SelectedVariety","Kostyl","url","fetch","then","response","json","data","itemsFromApi","map","item","id","display","concat","catch","error","console","log","Name","NewPrice","parseFloat","OldPrice","pic_url","method","headers","body","JSON","stringify","productvariety","producttype","oldprice","newprice","photo","store","componentDidMount","test1","test2","Shop","Logo","logo","ProductVariety","ProductType","tech","items","selected","varietyid"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAIC,aAAa,GAAG,CAAC,QAAD,EAAW,KAAX,EAAkB,MAAlB,EAA0B,QAA1B,CAApB;AACA,IAAIC,OAAO,GAAG,CAAC,QAAD,EAAW,KAAX,EAAkB,MAAlB,EAA0B,QAA1B,CAAd;AAEA,OAAO,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAEjCI,EAAAA,MAAM,GAAG;AACL,WACI;AAAS,MAAA,EAAE,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAQ,MAAA,EAAE,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAd,CADJ,CAHJ,EAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAS,MAAA,EAAE,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAFJ,EAGI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAFJ,EASI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CATJ,CADJ,EAeI;AAAS,MAAA,EAAE,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EADJ,EAEI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ,EAOI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EADJ,EAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAPJ,CAfJ,CAPA,CADJ;AAsCH;;AAzCgC;;AA2CrC,MAAMC,QAAN,SAAuBN,KAAK,CAACC,SAA7B,CAAuC;AACnCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,IAAI,EAAE;AAAnB,KAAb;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChB,SAAKC,QAAL,CAAc;AAAEN,MAAAA,KAAK,EAAEK,KAAK,CAACE,MAAN,CAAaP,KAAb,CAAmBQ,WAAnB;AAAT,KAAd;AACA,SAAKF,QAAL,CAAc;AAAEL,MAAAA,IAAI,EAAEI,KAAK,CAACE,MAAN,CAAaN;AAArB,KAAd;AACH;;AAEDG,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAEhBI,IAAAA,KAAK,CAAC,uBAAuB,KAAKV,KAAL,CAAWE,IAAlC,GAAyC,MAAzC,GAAkD,KAAKF,KAAL,CAAWC,KAA9D,CAAL;AACAK,IAAAA,KAAK,CAACK,cAAN;AACH;;AAEDf,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,QAAQ,EAAE,KAAKS,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,KAArC;AAA4C,MAAA,QAAQ,EAAE,KAAKE,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWE,IAApC;AAA0C,MAAA,QAAQ,EAAE,KAAKC,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CALJ,EASI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,wDAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CADJ;AAaH;;AAlCkC;;AAuCvC,MAAMS,OAAN,SAAsBrB,KAAK,CAACC,SAA5B,CAAsC;AAClCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTa,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,YAAY,EAAE,EAFL;AAGTC,MAAAA,SAAS,EAAE,EAHF;AAITC,MAAAA,UAAU,EAAE,EAJH;AAKTC,MAAAA,eAAe,EAAE,IALR;AAMTC,MAAAA,aAAa,EAAE,IANN;AAOTC,MAAAA,YAAY,EAAE,IAPL;AAQTC,MAAAA,QAAQ,EAAE,IARD;AASTC,MAAAA,QAAQ,EAAE,IATD;AAUTC,MAAAA,MAAM,EAAE;AAVC,KAAb;AAYH;;AAEDnB,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACK,cAAN;AACA,QAAIE,UAAU,GAAG,KAAKb,KAAL,CAAWa,UAA5B;AACA,QAAIX,IAAI,GAAGI,KAAK,CAACE,MAAN,CAAaN,IAAxB;AACA,QAAID,KAAK,GAAGK,KAAK,CAACE,MAAN,CAAaP,KAAzB;AAEAY,IAAAA,UAAU,CAACX,IAAD,CAAV,GAAmBD,KAAnB;AAEA,SAAKM,QAAL,CAAc;AAAEM,MAAAA;AAAF,KAAd;AACH;;AAEDU,EAAAA,2BAA2B,CAACjB,KAAD,EAAQ;AAC/BA,IAAAA,KAAK,CAACK,cAAN;AAEA,SAAKJ,QAAL,CAAc;AAAEU,MAAAA,eAAe,EAAEX,KAAK,CAACE,MAAN,CAAaP,KAAhC;AAAuCc,MAAAA,SAAS,EAAE;AAAlD,KAAd;AACA,UAAMS,eAAe,GAAG,KAAKxB,KAAL,CAAWiB,eAAnC;AACA,UAAMQ,MAAM,GAAG,KAAKzB,KAAL,CAAWsB,MAA1B;;AACA,QAAIE,eAAe,IAAI,IAAnB,IAA2BC,MAA/B,EAAuC;AACnC,UAAIC,GAAG,GAAG,iCAAiCpB,KAAK,CAACE,MAAN,CAAaP,KAAxD;AACA0B,MAAAA,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACWC,QAAD,IAAc;AAChB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAHL,EAIKF,IAJL,CAIUG,IAAI,IAAI;AACV,YAAIC,YAAY,GAAGD,IAAI,CAACE,GAAL,CAASC,IAAI,IAAI;AAAE,iBAAO;AAAEjC,YAAAA,KAAK,EAAEiC,IAAI,CAACC,EAAd;AAAkBC,YAAAA,OAAO,EAAEF,IAAI,CAAChC;AAAhC,WAAP;AAA+C,SAAlE,CAAnB;AACA,aAAKK,QAAL,CAAc;AAAEQ,UAAAA,SAAS,EAAE,CAAC;AAAEd,YAAAA,KAAK,EAAE,IAAT;AAAemC,YAAAA,OAAO,EAAE;AAAxB,WAAD,EAA4CC,MAA5C,CAAmDL,YAAnD;AAAb,SAAd;AAEH,OARL,EAQOM,KARP,CAQaC,KAAK,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OAVL;AAWA,WAAKhC,QAAL,CAAc;AAAEe,QAAAA,MAAM,EAAE;AAAV,OAAd;AACH;AAIJ;;AAEDjB,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACK,cAAN;AACA,UAAM+B,IAAI,GAAG,KAAK1C,KAAL,CAAWa,UAAX,CAAsB,MAAtB,CAAb;AACA,UAAMI,eAAe,GAAG,KAAKjB,KAAL,CAAWiB,eAAnC;AACA,UAAME,YAAY,GAAG,KAAKnB,KAAL,CAAWmB,YAAhC;AACA,UAAMwB,QAAQ,GAAGC,UAAU,CAAC,KAAK5C,KAAL,CAAWoB,QAAZ,CAA3B;AACA,UAAMyB,QAAQ,GAAGD,UAAU,CAAC,KAAK5C,KAAL,CAAWqB,QAAZ,CAA3B;AACA,UAAMyB,OAAO,GAAG,KAAK9C,KAAL,CAAWa,UAAX,CAAsB,SAAtB,CAAhB;AACA,UAAMK,aAAa,GAAG,KAAKlB,KAAL,CAAWkB,aAAjC;;AAGA,QAAIwB,IAAI,IAAI,IAAR,IAAgBzB,eAAe,IAAI,IAAnC,IAA2CE,YAAY,IAAI,IAA3D,IAAoE2B,OAAO,IAAI,IAA/E,IAAuF5B,aAAa,IAAI,IAA5G,EAAkH;AAC9GS,MAAAA,KAAK,CAAC,cAAD,EAAkB;AACnBoB,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX,SAFU;AAMnBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBjD,UAAAA,IAAI,EAAEwC,IADW;AAEjBU,UAAAA,cAAc,EAAEnC,eAFC;AAGjBoC,UAAAA,WAAW,EAAElC,YAHI;AAIjBmC,UAAAA,QAAQ,EAAET,QAJO;AAKjBU,UAAAA,QAAQ,EAAEZ,QALO;AAMjBa,UAAAA,KAAK,EAAEV,OANU;AAOjBW,UAAAA,KAAK,EAAEvC;AAPU,SAAf;AANa,OAAlB,CAAL;AAiBAR,MAAAA,KAAK,CAAC,mBAAD,CAAL;AACH,KAnBD,MAmBO;AACHA,MAAAA,KAAK,CAAC,WAAD,CAAL;AACH;AAEJ;;AAEDgD,EAAAA,iBAAiB,GAAG;AACZ/B,IAAAA,KAAK,CAAC,qBAAD,CAAL,CACKC,IADL,CACWC,QAAD,IAAc;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAHL,EAIKF,IAJL,CAIUG,IAAI,IAAI;AACV,UAAIC,YAAY,GAAGD,IAAI,CAACE,GAAL,CAASC,IAAI,IAAI;AAAE,eAAO;AAAEjC,UAAAA,KAAK,EAAEiC,IAAI,CAACC,EAAd;AAAkBC,UAAAA,OAAO,EAAEF,IAAI,CAAChC;AAAhC,SAAP;AAA+C,OAAlE,CAAnB;AACA,WAAKK,QAAL,CAAc;AAAEO,QAAAA,YAAY,EAAE,CAAC;AAAEb,UAAAA,KAAK,EAAE,IAAT;AAAemC,UAAAA,OAAO,EAAE;AAAxB,SAAD,EAA+CC,MAA/C,CAAsDL,YAAtD;AAAhB,OAAd;AACH,KAPL,EAOOM,KAPP,CAOaC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KATL;AAWAZ,IAAAA,KAAK,CAAC,YAAD,CAAL,CACKC,IADL,CACWC,QAAD,IAAc;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAHL,EAIKF,IAJL,CAIUG,IAAI,IAAI;AACV,UAAIC,YAAY,GAAGD,IAAI,CAACE,GAAL,CAASC,IAAI,IAAI;AAAE,eAAO;AAAEjC,UAAAA,KAAK,EAAEiC,IAAI,CAACC,EAAd;AAAkBC,UAAAA,OAAO,EAAEF,IAAI,CAAChC;AAAhC,SAAP;AAA+C,OAAlE,CAAnB;AACA,WAAKK,QAAL,CAAc;AAAES,QAAAA,UAAU,EAAE,CAAC;AAAEf,UAAAA,KAAK,EAAE,IAAT;AAAemC,UAAAA,OAAO,EAAE;AAAxB,SAAD,EAA6CC,MAA7C,CAAoDL,YAApD;AAAd,OAAd;AACH,KAPL,EAOOM,KAPP,CAOaC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KATL;AAUP;;AAED3C,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,QAAQ,EAAE,KAAKS,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,WAAW,EAAC,MAA3C;AAAkD,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWa,UAAX,CAAsB,MAAtB,CAAzD;AAAwF,MAAA,QAAQ,EAAE,KAAKV,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,EAIY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJZ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAQ,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWiB,eAA1B;AACM,MAAA,QAAQ,EAAE,KAAKM,2BAAL,CAAiCnB,IAAjC,CAAsC,IAAtC,CADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAKJ,KAAL,CAAWc,YAAX,CAAwBmB,GAAxB,CAA6BC,IAAD,IAAU;AAAQ,MAAA,GAAG,EAAEA,IAAI,CAACjC,KAAlB;AAAyB,MAAA,KAAK,EAAEiC,IAAI,CAACjC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6CiC,IAAI,CAACE,OAAlD,CAAtC,CAFH,CADF,CANJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACI;AAAQ,MAAA,KAAK,EAAE,KAAKpC,KAAL,CAAWmB,YAA1B;AACI,MAAA,QAAQ,EAAGb,KAAD,IAAW,KAAKC,QAAL,CAAc;AAAEY,QAAAA,YAAY,EAAEb,KAAK,CAACE,MAAN,CAAaP;AAA7B,OAAd,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKD,KAAL,CAAWe,SAAX,CAAqBkB,GAArB,CAA0BC,IAAD,IAAU;AAAQ,MAAA,GAAG,EAAEA,IAAI,CAACjC,KAAlB;AAAyB,MAAA,KAAK,EAAEiC,IAAI,CAACjC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6CiC,IAAI,CAACE,OAAlD,CAAnC,CAFL,CADJ,CADJ,CAhBJ,EAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB,EACI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,UAA1B;AAAqC,MAAA,WAAW,EAAC,UAAjD;AAA4D,MAAA,KAAK,EAAE,KAAKpC,KAAL,CAAWoB,QAA9E;AAAwF,MAAA,QAAQ,EAAGd,KAAD,IAAW,KAAKC,QAAL,CAAc;AAAEoD,QAAAA,KAAK,EAAErD,KAAK,CAACE,MAAN,CAAaP;AAAtB,OAAd,CAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAzBJ,EA2BY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BZ,EA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjB,EACI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,UAA1B;AAAqC,MAAA,WAAW,EAAC,UAAjD;AAA4D,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWqB,QAA9E;AAAwF,MAAA,QAAQ,EAAGf,KAAD,IAAW,KAAKC,QAAL,CAAc;AAAEqD,QAAAA,KAAK,EAAEtD,KAAK,CAACE,MAAN,CAAaP;AAAtB,OAAd,CAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CA7BJ,EA+BY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BZ,EAiCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,SAAxB;AAAkC,MAAA,WAAW,EAAC,SAA9C;AAAwD,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWa,UAAX,CAAsB,SAAtB,CAA/D;AAAiG,MAAA,QAAQ,EAAE,KAAKV,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAjCJ,EAmCY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnCZ,EAqCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACI;AAAQ,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWkB,aAA1B;AACI,MAAA,QAAQ,EAAGZ,KAAD,IAAW,KAAKC,QAAL,CAAc;AAAEW,QAAAA,aAAa,EAAEZ,KAAK,CAACE,MAAN,CAAaP;AAA9B,OAAd,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKD,KAAL,CAAWgB,UAAX,CAAsBiB,GAAtB,CAA2BC,IAAD,IAAU;AAAQ,MAAA,GAAG,EAAEA,IAAI,CAACjC,KAAlB;AAAyB,MAAA,KAAK,EAAEiC,IAAI,CAACjC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6CiC,IAAI,CAACE,OAAlD,CAApC,CAFL,CADJ,CArCJ,EA2CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CJ,EA6CI;AAAO,MAAA,aAAa,EAAC,iBAArB;AAAuC,MAAA,IAAI,EAAC,QAA5C;AAAqD,MAAA,KAAK,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7CJ,CADJ;AAiDH;;AApKiC;;AAwKtC,MAAMyB,IAAN,SAAmBtE,KAAK,CAACC,SAAzB,CAAmC;AAC/BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTa,MAAAA,UAAU,EAAE;AADH,KAAb;AAGH;;AAEDV,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACK,cAAN;AACA,QAAIE,UAAU,GAAG,KAAKb,KAAL,CAAWa,UAA5B;AACA,QAAIX,IAAI,GAAGI,KAAK,CAACE,MAAN,CAAaN,IAAxB;AACA,QAAID,KAAK,GAAGK,KAAK,CAACE,MAAN,CAAaP,KAAzB;AAEAY,IAAAA,UAAU,CAACX,IAAD,CAAV,GAAmBD,KAAnB;AAEA,SAAKM,QAAL,CAAc;AAAEM,MAAAA;AAAF,KAAd;AACH;;AAEDR,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACK,cAAN;AACA,UAAM+B,IAAI,GAAG,KAAK1C,KAAL,CAAWa,UAAX,CAAsB,MAAtB,CAAb;AACA,UAAMiD,IAAI,GAAG,KAAK9D,KAAL,CAAWa,UAAX,CAAsB,UAAtB,CAAb;;AAEA,QAAI6B,IAAI,IAAI,IAAZ,EAAkB;AACd,UAAIoB,IAAI,IAAI,IAAZ,EAAkB;AACdnC,QAAAA,KAAK,CAAC,YAAD,EAAe;AAChBoB,UAAAA,MAAM,EAAE,MADQ;AAEhBC,UAAAA,OAAO,EAAE;AACL,sBAAU,kBADL;AAEL,4BAAgB;AAFX,WAFO;AAMhBC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBjD,YAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWa,UAAX,CAAsB,MAAtB,CADW;AAEjBkD,YAAAA,IAAI,EAAE,KAAK/D,KAAL,CAAWa,UAAX,CAAsB,UAAtB;AAFW,WAAf;AANU,SAAf,CAAL;AAWAH,QAAAA,KAAK,CAAC,mBAAD,CAAL;AACH,OAbD,MAaO;AACHA,QAAAA,KAAK,CAAC,gBAAD,CAAL;AACH;AACJ,KAjBD,MAiBO;AACHA,MAAAA,KAAK,CAAC,WAAD,CAAL;AACH;AAEJ;;AACDd,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,QAAQ,EAAE,KAAKS,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,WAAW,EAAC,MAA3C;AAAkD,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWa,UAAX,CAAsB,MAAtB,CAAzD;AAAwF,MAAA,QAAQ,EAAE,KAAKV,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,EAIY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJZ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,WAAW,EAAC,UAA/C;AAA0D,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWa,UAAX,CAAsB,UAAtB,CAAjE;AAAoG,MAAA,QAAQ,EAAE,KAAKV,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANJ,EAQY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARZ,EAUI;AAAO,MAAA,aAAa,EAAC,iBAArB;AAAuC,MAAA,IAAI,EAAC,QAA5C;AAAqD,MAAA,KAAK,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADJ;AAcH;;AA7D8B;;AAiEnC,MAAM4D,cAAN,SAA6BzE,KAAK,CAACC,SAAnC,CAA6C;AACzCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTa,MAAAA,UAAU,EAAE;AADH,KAAb;AAGH;;AAEDV,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACK,cAAN;AACA,QAAIE,UAAU,GAAG,KAAKb,KAAL,CAAWa,UAA5B;AACA,QAAIX,IAAI,GAAGI,KAAK,CAACE,MAAN,CAAaN,IAAxB;AACA,QAAID,KAAK,GAAGK,KAAK,CAACE,MAAN,CAAaP,KAAzB;AAEAY,IAAAA,UAAU,CAACX,IAAD,CAAV,GAAmBD,KAAnB;AAEA,SAAKM,QAAL,CAAc;AAAEM,MAAAA;AAAF,KAAd;AACH;;AAEDR,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACK,cAAN;AACA,UAAM+B,IAAI,GAAG,KAAK1C,KAAL,CAAWa,UAAX,CAAsB,MAAtB,CAAb;;AAGA,QAAI6B,IAAI,IAAI,IAAZ,EAAkB;AACdf,MAAAA,KAAK,CAAC,qBAAD,EAAwB;AACzBoB,QAAAA,MAAM,EAAE,MADiB;AAEzBC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX,SAFgB;AAMzBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBjD,UAAAA,IAAI,EAAEwC;AADW,SAAf;AANmB,OAAxB,CAAL;AAWAhC,MAAAA,KAAK,CAAC,mBAAD,CAAL;AACH,KAbD,MAaO;AACHA,MAAAA,KAAK,CAAC,WAAD,CAAL;AACH;AAGJ;;AACDd,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,QAAQ,EAAE,KAAKS,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,WAAW,EAAC,MAA3C;AAAkD,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWa,UAAX,CAAsB,MAAtB,CAAzD;AAAwF,MAAA,QAAQ,EAAE,KAAKV,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAGY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHZ,EAKI;AAAO,MAAA,aAAa,EAAC,iBAArB;AAAuC,MAAA,IAAI,EAAC,QAA5C;AAAqD,MAAA,KAAK,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADJ;AASH;;AArDwC;;AAyD7C,MAAM6D,WAAN,SAA0B1E,KAAK,CAACC,SAAhC,CAA0C;AACtCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTa,MAAAA,UAAU,EAAE,EADH;AAETZ,MAAAA,KAAK,EAAE,QAFE;AAGRiE,MAAAA,IAAI,EAAE,QAHE;AAITxE,MAAAA,OAAO,EAAE,EAJA;AAKTyE,MAAAA,KAAK,EAAE,EALE;AAMTC,MAAAA,QAAQ,EAAE;AAND,KAAb;AAQH;;AAEDjE,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACK,cAAN;AACA,QAAIE,UAAU,GAAG,KAAKb,KAAL,CAAWa,UAA5B;AACA,QAAIX,IAAI,GAAGI,KAAK,CAACE,MAAN,CAAaN,IAAxB;AACA,QAAID,KAAK,GAAGK,KAAK,CAACE,MAAN,CAAaP,KAAzB;AAEAY,IAAAA,UAAU,CAACX,IAAD,CAAV,GAAmBD,KAAnB;AAEA,SAAKM,QAAL,CAAc;AAAEM,MAAAA;AAAF,KAAd;AACH;;AAGDR,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACK,cAAN;AACA,UAAM+B,IAAI,GAAG,KAAK1C,KAAL,CAAWa,UAAX,CAAsB,MAAtB,CAAb;AACA,UAAMmD,cAAc,GAAG,KAAKhE,KAAL,CAAWoE,QAAlC;;AAEA,QAAI1B,IAAI,IAAI,IAAZ,EAAkB;AACd,UAAIsB,cAAc,IAAI,IAAtB,EAA4B;AACxBrC,QAAAA,KAAK,CAAC,kBAAD,EAAqB;AACtBoB,UAAAA,MAAM,EAAE,MADc;AAEtBC,UAAAA,OAAO,EAAE;AACL,sBAAU,kBADL;AAEL,4BAAgB;AAFX,WAFa;AAMtBC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBjD,YAAAA,IAAI,EAAEwC,IADW;AAEjB2B,YAAAA,SAAS,EAAEL;AAFM,WAAf;AANgB,SAArB,CAAL;AAWAtD,QAAAA,KAAK,CAAC,gBAAD,CAAL;AACH,OAbD,MAaO;AACHA,QAAAA,KAAK,CAAC,gBAAD,CAAL;AACH;AACJ,KAjBD,MAiBO;AACHA,MAAAA,KAAK,CAAC,WAAD,CAAL;AACH;AAEJ;;AACDgD,EAAAA,iBAAiB,GAAG;AAChB/B,IAAAA,KAAK,CAAC,qBAAD,CAAL,CACKC,IADL,CACWC,QAAD,IAAc;AAChB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAHL,EAIKF,IAJL,CAIUG,IAAI,IAAI;AACV,UAAIC,YAAY,GAAGD,IAAI,CAACE,GAAL,CAASC,IAAI,IAAI;AAAE,eAAO;AAAEjC,UAAAA,KAAK,EAAEiC,IAAI,CAACC,EAAd;AAAkBC,UAAAA,OAAO,EAAEF,IAAI,CAAChC;AAAhC,SAAP;AAA+C,OAAlE,CAAnB;AACA,WAAKK,QAAL,CAAc;AAAE4D,QAAAA,KAAK,EAAE,CAAC;AAAElE,UAAAA,KAAK,EAAE,EAAT;AAAamC,UAAAA,OAAO,EAAE;AAAtB,SAAD,EAA6CC,MAA7C,CAAoDL,YAApD;AAAT,OAAd;AACH,KAPL,EAOOM,KAPP,CAOaC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KATL;AAUH;;AACD3C,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,QAAQ,EAAE,KAAKS,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,WAAW,EAAC,MAA3C;AAAkD,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWa,UAAX,CAAsB,MAAtB,CAAzD;AAAwF,MAAA,QAAQ,EAAE,KAAKV,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,EAIY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJZ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANJ,EAOQ;AAAQ,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWoE,QAA1B;AACI,MAAA,QAAQ,EAAG9D,KAAD,IAAW,KAAKC,QAAL,CAAc;AAAE6D,QAAAA,QAAQ,EAAE9D,KAAK,CAACE,MAAN,CAAaP;AAAzB,OAAd,CADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKD,KAAL,CAAWmE,KAAX,CAAiBlC,GAAjB,CAAsBC,IAAD,IAAU;AAAQ,MAAA,GAAG,EAAEA,IAAI,CAACjC,KAAlB;AAAyB,MAAA,KAAK,EAAEiC,IAAI,CAACjC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6CiC,IAAI,CAACE,OAAlD,CAA/B,CAFL,CAPR,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,EAaI;AAAO,MAAA,aAAa,EAAC,iBAArB;AAAuC,MAAA,IAAI,EAAC,QAA5C;AAAqD,MAAA,KAAK,EAAC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CADJ;AAiBH;;AAlFqC","sourcesContent":["import React, { Component } from 'react';\r\n\r\nlet itemsVariety3 = ['orange', 'red', 'blue', 'purple'];\r\nlet Variety = ['orange', 'red', 'blue', 'purple'];\r\n\r\nexport class Input extends Component {\r\n\r\n    render() {\r\n        return (  \r\n            <section id=\"main\">\r\n\r\n\r\n                <header id=\"header\">\r\n                    <div>Snapshot <span>by TEMPLATED</span></div>\r\n                </header>\r\n\r\n            <div>\r\n                <section id=\"contact\" >\r\n\r\n                    <div className=\" column\">\r\n                    \r\n                        <h3>Продукты</h3>                \r\n                        <Product />\r\n                      \r\n                   </div>\r\n\r\n                    <div className=\"social column\">\r\n                        <h3>Магазин</h3>\r\n                        <Shop />\r\n                    </div>\r\n                </section>\r\n                <section id=\"contact\" >\r\n\r\n                    <div className=\" column\">\r\n                        <h3>Вид продукта</h3>\r\n                        <ProductVariety />\r\n                    </div>\r\n\r\n                    <div className=\"social column\">\r\n                        <h3>Тип продукта</h3>\r\n                        <ProductType />\r\n                    </div>\r\n                </section>\r\n            </div>\r\n          </section >\r\n        );\r\n    }\r\n}\r\nclass NameForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { value: '', name: ''};\r\n\r\n        this.handleChange = this.handleChange.bind(this);      \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ value: event.target.value.toUpperCase() });\r\n        this.setState({ name: event.target.name});\r\n    }\r\n\r\n    handleSubmit(event) {\r\n       \r\n        alert('Отправленное имя: ' + this.state.name + \"    \" + this.state.value);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label>\r\n                   Value:\r\n                  <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n                </label>\r\n                <label>\r\n                    Имя:\r\n                  <input type=\"text\" name={this.state.name} onChange={this.handleChange} />\r\n                </label>\r\n                <input type=\"submit\" value=\"Отправить\" />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nclass Product extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            formValues: {},\r\n            itemsVariety: [],\r\n            itemsType: [],\r\n            itemsStore: [],\r\n            selectedVariety: null,\r\n            selectedStore: null,\r\n            selectedType: null,\r\n            newPrice: null,\r\n            oldPrice: null,\r\n            kostyl: true\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        event.preventDefault();\r\n        let formValues = this.state.formValues;\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n\r\n        formValues[name] = value;\r\n\r\n        this.setState({ formValues })\r\n    }  \r\n\r\n    handleChangeSelectedVariety(event) {\r\n        event.preventDefault();           \r\n\r\n        this.setState({ selectedVariety: event.target.value, itemsType: [] })\r\n        const SelectedVariety = this.state.selectedVariety;\r\n        const Kostyl = this.state.kostyl\r\n        if (SelectedVariety != null || Kostyl) {\r\n            let url = \"api/ProductType/GetFromName/\" + event.target.value;\r\n            fetch(url)\r\n                .then((response) => {\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    let itemsFromApi = data.map(item => { return { value: item.id, display: item.name } })\r\n                    this.setState({ itemsType: [{ value: null, display: '(Select type)' }].concat(itemsFromApi) });\r\n\r\n                }).catch(error => {\r\n                    console.log(error);\r\n                });\r\n            this.setState({ kostyl: false });\r\n        }\r\n        \r\n      \r\n        \r\n    }  \r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const Name = this.state.formValues['name'];\r\n        const selectedVariety = this.state.selectedVariety;\r\n        const selectedType = this.state.selectedType;\r\n        const NewPrice = parseFloat(this.state.newPrice);\r\n        const OldPrice = parseFloat(this.state.oldPrice);\r\n        const pic_url = this.state.formValues['pic_url'];\r\n        const selectedStore = this.state.selectedStore;\r\n\r\n\r\n        if (Name != null && selectedVariety != null && selectedType != null &&  pic_url != null && selectedStore != null) {\r\n            fetch('api/Product/' , {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    name: Name,\r\n                    productvariety: selectedVariety,\r\n                    producttype: selectedType,\r\n                    oldprice: OldPrice,\r\n                    newprice: NewPrice,\r\n                    photo: pic_url,\r\n                    store: selectedStore\r\n                })\r\n\r\n            })\r\n            alert(\"Request delivered\");\r\n        } else {\r\n            alert('try again')\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n            fetch(\"api/ProductVariety/\")\r\n                .then((response) => {\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    let itemsFromApi = data.map(item => { return { value: item.id, display: item.name } })\r\n                    this.setState({ itemsVariety: [{ value: null, display: '(Select variety)' }].concat(itemsFromApi) });\r\n                }).catch(error => {\r\n                    console.log(error);\r\n                });\r\n\r\n            fetch(\"api/Store/\")\r\n                .then((response) => {\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    let itemsFromApi = data.map(item => { return { value: item.id, display: item.name } })\r\n                    this.setState({ itemsStore: [{ value: null, display: '(Select store)' }].concat(itemsFromApi) });\r\n                }).catch(error => {\r\n                    console.log(error);\r\n                });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit.bind(this)}>\r\n\r\n                <label> Name:\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Name\" value={this.state.formValues[\"name\"]} onChange={this.handleChange.bind(this)} />\r\n                </label><br />\r\n\r\n                <label>ProductVariety:\r\n                  <select value={this.state.selectedVariety}\r\n                        onChange={this.handleChangeSelectedVariety.bind(this)}>\r\n                    {this.state.itemsVariety.map((item) => <option key={item.value} value={item.value}>{item.display}</option>)}\r\n                    </select>\r\n                </label>\r\n\r\n                <br />\r\n\r\n\r\n                <div >\r\n                    <label>ProductType:\r\n                        <select value={this.state.selectedType}\r\n                            onChange={(event) => this.setState({ selectedType: event.target.value })}>\r\n                            {this.state.itemsType.map((item) => <option key={item.value} value={item.value}>{item.display}</option>)}\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n\r\n                <label> NewPrice:<br />\r\n                    <input type=\"number\" name=\"NewPrice\" placeholder=\"NewPrice\" value={this.state.newPrice} onChange={(event) => this.setState({ test1: event.target.value })} />\r\n                </label><br />\r\n\r\n                <label> OldPrice:<br />\r\n                    <input type=\"number\" name=\"OldPrice\" placeholder=\"OldPrice\" value={this.state.oldPrice} onChange={(event) => this.setState({ test2: event.target.value })} />\r\n                </label><br />\r\n\r\n                <label> pic_url:\r\n                    <input type=\"text\" name=\"pic_url\" placeholder=\"pic_url\" value={this.state.formValues[\"pic_url\"]} onChange={this.handleChange.bind(this)} />\r\n                </label><br />\r\n\r\n                <label>Store:\r\n                    <select value={this.state.selectedStore}\r\n                        onChange={(event) => this.setState({ selectedStore: event.target.value })}>\r\n                        {this.state.itemsStore.map((item) => <option key={item.value} value={item.value}>{item.display}</option>)}\r\n                    </select>\r\n                </label>\r\n                <br />\r\n\r\n                <input classNameName=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass Shop extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            formValues: {}\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        event.preventDefault();\r\n        let formValues = this.state.formValues;\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n\r\n        formValues[name] = value;\r\n\r\n        this.setState({ formValues })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const Name = this.state.formValues['name'];\r\n        const Logo = this.state.formValues['logo_url'];\r\n\r\n        if (Name != null) {\r\n            if (Logo != null) {\r\n                fetch('api/Store/', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        name: this.state.formValues['name'],\r\n                        logo: this.state.formValues[\"logo_url\"],\r\n                    })\r\n                })\r\n                alert('Request delivered')\r\n            } else {\r\n                alert('enter logo_url')\r\n            }\r\n        } else {\r\n            alert('try again')\r\n        }\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit.bind(this)}>\r\n\r\n                <label> Name:\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Name\" value={this.state.formValues[\"name\"]} onChange={this.handleChange.bind(this)} />\r\n                </label><br />\r\n\r\n                <label> logo_url:\r\n                    <input type=\"text\" name=\"logo_url\" placeholder=\"logo_url\" value={this.state.formValues[\"logo_url\"]} onChange={this.handleChange.bind(this)} />\r\n                </label><br />\r\n\r\n                <input classNameName=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass ProductVariety extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            formValues: {}\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        event.preventDefault();\r\n        let formValues = this.state.formValues;\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n\r\n        formValues[name] = value;\r\n\r\n        this.setState({ formValues })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const Name = this.state.formValues['name'];\r\n       \r\n\r\n        if (Name != null) {          \r\n            fetch('api/ProductVariety/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    name: Name, \r\n                })\r\n\r\n            })\r\n            alert('Request delivered')           \r\n        } else {\r\n            alert('try again')\r\n        }\r\n\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit.bind(this)}>\r\n                <label> Name:\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Name\" value={this.state.formValues[\"name\"]} onChange={this.handleChange.bind(this)} />\r\n                </label><br />\r\n\r\n                <input classNameName=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass ProductType extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            formValues: {},\r\n            value: 'orange',\r\n             tech: 'select',\r\n            Variety: [],\r\n            items: [],\r\n            selected: \"\",\r\n        }\r\n    }\r\n   \r\n    handleChange(event) {\r\n        event.preventDefault();\r\n        let formValues = this.state.formValues;\r\n        let name = event.target.name;\r\n        let value = event.target.value;\r\n\r\n        formValues[name] = value;\r\n\r\n        this.setState({ formValues  })\r\n    }\r\n\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        const Name = this.state.formValues['name'];\r\n        const ProductVariety = this.state.selected;\r\n\r\n        if (Name != null) {\r\n            if (ProductVariety != null) {\r\n                fetch('api/ProductType/', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        name: Name,\r\n                        varietyid: ProductVariety,\r\n                    })\r\n                })\r\n                alert('good shit, bro')\r\n            } else {\r\n                alert('enter logo_url')\r\n            }\r\n        } else {\r\n            alert('try again')\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        fetch(\"api/ProductVariety/\")\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                let itemsFromApi = data.map(item => { return { value: item.id, display: item.name } })\r\n                this.setState({ items: [{ value: '', display: '(Select variety)' }].concat(itemsFromApi) });\r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit.bind(this)}>\r\n\r\n                <label> Name:\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Name\" value={this.state.formValues[\"name\"]} onChange={this.handleChange.bind(this)} />\r\n                </label><br />\r\n                     \r\n                <h5>ProductVariety:</h5>\r\n                    <select value={this.state.selected}\r\n                        onChange={(event) => this.setState({ selected: event.target.value })}>\r\n                        {this.state.items.map((item) => <option key={item.value} value={item.value}>{item.display}</option>)}\r\n                    </select>\r\n                <br />\r\n\r\n                <input classNameName=\"btn btn-primary\" type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}